{
  "service": {
    "service": "hilberFraiese-ejercicioEbased",
    "serviceObject": {
      "name": "hilberFraiese-ejercicioEbased"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "stage": "dev",
      "region": "us-east-1",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem"
          ],
          "Resource": "*"
        }
      ],
      "environment": {
        "CLIENT_TABLE": {
          "Ref": "ClientsDynamoDbTable"
        },
        "CLIENT_TOPIC": {
          "Ref": "clientsTopic"
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ClientCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/hilberFraiese-ejercicioEbased-dev-clientCreate"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "hilberFraiese-ejercicioEbased",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hilberFraiese-ejercicioEbased-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hilberFraiese-ejercicioEbased-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "hilberFraiese-ejercicioEbased",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ClientCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/hilberFraiese-ejercicioEbased/dev/1673557896264-2023-01-12T21:11:36.264Z/hilberFraiese-ejercicioEbased.zip"
              },
              "Handler": "client/handler/index.create",
              "Runtime": "nodejs12.x",
              "FunctionName": "hilberFraiese-ejercicioEbased-dev-clientCreate",
              "MemorySize": 128,
              "Timeout": 6,
              "Description": "Submit client information and starts credit card process.",
              "Environment": {
                "Variables": {
                  "CLIENT_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"CLIENT_TABLE\"]"
                  },
                  "CLIENT_TOPIC": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"CLIENT_TOPIC\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "ClientCreateIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ClientCreateIamRoleLambdaExecution",
              "ClientCreateLogGroup"
            ]
          },
          "ClientCreateLambdaVersion7Eyo3YuM31lXeGkijZ6yASk6axxpLAQO3qRg4JMGHo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ClientCreateLambdaFunction"
              },
              "CodeSha256": "FlTWruDNjyVzs8WtupZ/YNTIucvO6kdsOcWKJMm6MZc=",
              "Description": "Submit client information and starts credit card process."
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-hilberFraiese-ejercicioEbased",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceClients": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "clients",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodClientsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceClients"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ClientCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ClientCreateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1673557894009": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodClientsPost"
            ]
          },
          "ClientCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ClientCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ClientCreateIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "hilberFraiese-ejercicioEbased",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hilberFraiese-ejercicioEbased-dev-clientCreate:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "hilberFraiese-ejercicioEbased",
                    "dev",
                    "clientCreate",
                    {
                      "Ref": "AWS::Region"
                    }
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "ClientsDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "dni",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "dni",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "StreamSpecification": {
                "StreamViewType": "NEW_AND_OLD_IMAGES"
              },
              "TableName": "hilberFraiese-ejercicioEbased-dev-CLIENT_TABLE"
            }
          },
          "clientsTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "DisplayName": "clientTopic",
              "TopicName": "hilberFraiese-ejercicioEbased-dev-clientsTopic"
            }
          },
          "cardQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "hilberFraiese-ejercicioEbased-dev-cardQueue"
            }
          },
          "CardSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Ref": "clientsTopic"
              },
              "Endpoint": {
                "Fn::GetAtt": [
                  "cardQueue",
                  "Arn"
                ]
              },
              "Protocol": "sqs",
              "RawMessageDelivery": "true"
            }
          },
          "snsTocardQueueSqsPolicy": {
            "Type": "AWS::SQS::QueuePolicy",
            "Properties": {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "allow-sns-messages",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Resource": {
                      "Fn::GetAtt": [
                        "cardQueue",
                        "Arn"
                      ]
                    },
                    "Action": "SQS:SendMessage",
                    "Condition": {
                      "ArnEquals": {
                        "aws:SourceArn": {
                          "Ref": "clientsTopic"
                        }
                      }
                    }
                  }
                ]
              },
              "Queues": [
                {
                  "Ref": "cardQueue"
                }
              ]
            }
          },
          "giftQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "hilberFraiese-ejercicioEbased-dev-giftQueue"
            }
          },
          "GiftSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Ref": "clientsTopic"
              },
              "Endpoint": {
                "Fn::GetAtt": [
                  "giftQueue",
                  "Arn"
                ]
              },
              "Protocol": "sqs",
              "RawMessageDelivery": "true"
            }
          },
          "snsToGiftQueueSqsPolicy": {
            "Type": "AWS::SQS::QueuePolicy",
            "Properties": {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "allow-sns-messages",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Resource": {
                      "Fn::GetAtt": [
                        "giftQueue",
                        "Arn"
                      ]
                    },
                    "Action": "SQS:SendMessage",
                    "Condition": {
                      "ArnEquals": {
                        "aws:SourceArn": {
                          "Ref": "clientsTopic"
                        }
                      }
                    }
                  }
                ]
              },
              "Queues": [
                {
                  "Ref": "giftQueue"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-hilberFraiese-ejercicioEbased-dev-ServerlessDeploymentBucketName"
            }
          },
          "ClientCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ClientCreateLambdaVersion7Eyo3YuM31lXeGkijZ6yASk6axxpLAQO3qRg4JMGHo"
            },
            "Export": {
              "Name": "sls-hilberFraiese-ejercicioEbased-dev-ClientCreateLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-hilberFraiese-ejercicioEbased-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "clientCreate": {
        "handler": "client/handler/index.create",
        "memorySize": 128,
        "description": "Submit client information and starts credit card process.",
        "events": [
          {
            "http": {
              "path": "clients",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ClientCreateIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ClientCreateIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "hilberFraiese-ejercicioEbased-dev-clientCreate",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ClientCreateLambdaVersion7Eyo3YuM31lXeGkijZ6yASk6axxpLAQO3qRg4JMGHo"
      }
    },
    "resources": {
      "Resources": {
        "ClientsDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "dni",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "dni",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "StreamSpecification": {
              "StreamViewType": "NEW_AND_OLD_IMAGES"
            },
            "TableName": "hilberFraiese-ejercicioEbased-dev-CLIENT_TABLE"
          }
        },
        "clientsTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "DisplayName": "clientTopic",
            "TopicName": "hilberFraiese-ejercicioEbased-dev-clientsTopic"
          }
        },
        "cardQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "hilberFraiese-ejercicioEbased-dev-cardQueue"
          }
        },
        "CardSubscription": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "TopicArn": {
              "Ref": "clientsTopic"
            },
            "Endpoint": {
              "Fn::GetAtt": [
                "cardQueue",
                "Arn"
              ]
            },
            "Protocol": "sqs",
            "RawMessageDelivery": "true"
          }
        },
        "snsTocardQueueSqsPolicy": {
          "Type": "AWS::SQS::QueuePolicy",
          "Properties": {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "allow-sns-messages",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Resource": {
                    "Fn::GetAtt": [
                      "cardQueue",
                      "Arn"
                    ]
                  },
                  "Action": "SQS:SendMessage",
                  "Condition": {
                    "ArnEquals": {
                      "aws:SourceArn": {
                        "Ref": "clientsTopic"
                      }
                    }
                  }
                }
              ]
            },
            "Queues": [
              {
                "Ref": "cardQueue"
              }
            ]
          }
        },
        "giftQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "hilberFraiese-ejercicioEbased-dev-giftQueue"
          }
        },
        "GiftSubscription": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "TopicArn": {
              "Ref": "clientsTopic"
            },
            "Endpoint": {
              "Fn::GetAtt": [
                "giftQueue",
                "Arn"
              ]
            },
            "Protocol": "sqs",
            "RawMessageDelivery": "true"
          }
        },
        "snsToGiftQueueSqsPolicy": {
          "Type": "AWS::SQS::QueuePolicy",
          "Properties": {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "allow-sns-messages",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Resource": {
                    "Fn::GetAtt": [
                      "giftQueue",
                      "Arn"
                    ]
                  },
                  "Action": "SQS:SendMessage",
                  "Condition": {
                    "ArnEquals": {
                      "aws:SourceArn": {
                        "Ref": "clientsTopic"
                      }
                    }
                  }
                }
              ]
            },
            "Queues": [
              {
                "Ref": "giftQueue"
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "frameworkVersion": "3.26.0",
      "service": "hilberFraiese-ejercicioEbased",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/naranjax/Desktop/ejercicio-ebased/.serverless/hilberFraiese-ejercicioEbased.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/hilberFraiese-ejercicioEbased/dev/1673557896264-2023-01-12T21:11:36.264Z",
    "artifact": "hilberFraiese-ejercicioEbased.zip"
  }
}